
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can read a user's public profile data
      allow read: if true;
      // Only the authenticated owner can create or update their own profile
      allow create, update: if isSignedIn() && isOwner(userId);
      // Users cannot delete their own profile documents through these rules
      allow delete: if false;
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Anyone can read event details
      allow read: if true;
      // Only authenticated users who are verified hosts can create events
      allow create: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isVerifiedHost == true;
      // Only the user who created the event (the host) can update or delete it
      allow update, delete: if isSignedIn() && isOwner(resource.data.hostUid);
    }

    // Rules for the 'chats' collection and its messages
    match /chats/{chatId} {
      // Allow read/write access only to participants of the chat
      allow read, create, update: if isSignedIn() && request.auth.uid in resource.data.participantUids;

      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
        // Allow read/write access only to participants of the parent chat
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantUids;
        // Messages cannot be updated or deleted by clients
        allow update, delete: if false;
      }
    }
  }
}
